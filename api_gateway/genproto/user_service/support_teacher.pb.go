// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: support_teacher.proto

package user_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SupportTeacherEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SupportTeacherEmpty) Reset() {
	*x = SupportTeacherEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTeacherEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTeacherEmpty) ProtoMessage() {}

func (x *SupportTeacherEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTeacherEmpty.ProtoReflect.Descriptor instead.
func (*SupportTeacherEmpty) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{0}
}

func (x *SupportTeacherEmpty) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SupportTeacherID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SupportTeacherID) Reset() {
	*x = SupportTeacherID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTeacherID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTeacherID) ProtoMessage() {}

func (x *SupportTeacherID) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTeacherID.ProtoReflect.Descriptor instead.
func (*SupportTeacherID) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{1}
}

func (x *SupportTeacherID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname          string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,4,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,5,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,6,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,7,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *CreateSupportTeacherRequest) Reset() {
	*x = CreateSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSupportTeacherRequest) ProtoMessage() {}

func (x *CreateSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*CreateSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSupportTeacherRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateSupportTeacherRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateSupportTeacherRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateSupportTeacherRequest) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateSupportTeacherRequest) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *CreateSupportTeacherRequest) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *CreateSupportTeacherRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type SupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *SupportTeacherResponse) Reset() {
	*x = SupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTeacherResponse) ProtoMessage() {}

func (x *SupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*SupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{3}
}

func (x *SupportTeacherResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SupportTeacherResponse) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *SupportTeacherResponse) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *SupportTeacherResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SupportTeacherResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SupportTeacherResponse) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *SupportTeacherResponse) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *SupportTeacherResponse) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *SupportTeacherResponse) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type UpdateSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *UpdateSupportTeacherRequest) Reset() {
	*x = UpdateSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSupportTeacherRequest) ProtoMessage() {}

func (x *UpdateSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*UpdateSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSupportTeacherRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSupportTeacherRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateSupportTeacherRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateSupportTeacherRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateSupportTeacherRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSupportTeacherRequest) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateSupportTeacherRequest) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *UpdateSupportTeacherRequest) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *UpdateSupportTeacherRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type GetSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CreatedAt         string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         string  `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *GetSupportTeacherResponse) Reset() {
	*x = GetSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportTeacherResponse) ProtoMessage() {}

func (x *GetSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{5}
}

func (x *GetSupportTeacherResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetSupportTeacherResponse) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetSupportTeacherResponse) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *GetSupportTeacherResponse) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetSupportTeacherResponse) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type GetReportSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CreatedAt         string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         string  `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Totalsum          string  `protobuf:"bytes,13,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
}

func (x *GetReportSupportTeacherResponse) Reset() {
	*x = GetReportSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportSupportTeacherResponse) ProtoMessage() {}

func (x *GetReportSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetReportSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{6}
}

func (x *GetReportSupportTeacherResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetTotalsum() string {
	if x != nil {
		return x.Totalsum
	}
	return ""
}

type GetListSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListSupportTeacherRequest) Reset() {
	*x = GetListSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSupportTeacherRequest) ProtoMessage() {}

func (x *GetListSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetListSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{7}
}

func (x *GetListSupportTeacherRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListSupportTeacherRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListSupportTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetReportListSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetReportListSupportTeacherRequest) Reset() {
	*x = GetReportListSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListSupportTeacherRequest) ProtoMessage() {}

func (x *GetReportListSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetReportListSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{8}
}

func (x *GetReportListSupportTeacherRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportListSupportTeacherRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetReportListSupportTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count              int64                        `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	GetSupportTeachers []*GetSupportTeacherResponse `protobuf:"bytes,2,rep,name=GetSupportTeachers,proto3" json:"GetSupportTeachers,omitempty"`
}

func (x *GetListSupportTeacherResponse) Reset() {
	*x = GetListSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSupportTeacherResponse) ProtoMessage() {}

func (x *GetListSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetListSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{9}
}

func (x *GetListSupportTeacherResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListSupportTeacherResponse) GetGetSupportTeachers() []*GetSupportTeacherResponse {
	if x != nil {
		return x.GetSupportTeachers
	}
	return nil
}

type GetReportListSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count              int64                              `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	GetSupportTeachers []*GetReportSupportTeacherResponse `protobuf:"bytes,2,rep,name=GetSupportTeachers,proto3" json:"GetSupportTeachers,omitempty"`
}

func (x *GetReportListSupportTeacherResponse) Reset() {
	*x = GetReportListSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_teacher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListSupportTeacherResponse) ProtoMessage() {}

func (x *GetReportListSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_support_teacher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetReportListSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_support_teacher_proto_rawDescGZIP(), []int{10}
}

func (x *GetReportListSupportTeacherResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetReportListSupportTeacherResponse) GetGetSupportTeachers() []*GetReportSupportTeacherResponse {
	if x != nil {
		return x.GetSupportTeachers
	}
	return nil
}

var File_support_teacher_proto protoreflect.FileDescriptor

var file_support_teacher_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x22,
	0x0a, 0x10, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x92, 0x02, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x97, 0x02, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x94, 0x03, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75,
	0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75,
	0x6d, 0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x22, 0x66, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x8e, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0x9a, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x32, 0xd7, 0x04, 0x0a, 0x15, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x27, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_support_teacher_proto_rawDescOnce sync.Once
	file_support_teacher_proto_rawDescData = file_support_teacher_proto_rawDesc
)

func file_support_teacher_proto_rawDescGZIP() []byte {
	file_support_teacher_proto_rawDescOnce.Do(func() {
		file_support_teacher_proto_rawDescData = protoimpl.X.CompressGZIP(file_support_teacher_proto_rawDescData)
	})
	return file_support_teacher_proto_rawDescData
}

var file_support_teacher_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_support_teacher_proto_goTypes = []interface{}{
	(*SupportTeacherEmpty)(nil),                 // 0: user_service.SupportTeacherEmpty
	(*SupportTeacherID)(nil),                    // 1: user_service.SupportTeacherID
	(*CreateSupportTeacherRequest)(nil),         // 2: user_service.CreateSupportTeacherRequest
	(*SupportTeacherResponse)(nil),              // 3: user_service.SupportTeacherResponse
	(*UpdateSupportTeacherRequest)(nil),         // 4: user_service.UpdateSupportTeacherRequest
	(*GetSupportTeacherResponse)(nil),           // 5: user_service.GetSupportTeacherResponse
	(*GetReportSupportTeacherResponse)(nil),     // 6: user_service.GetReportSupportTeacherResponse
	(*GetListSupportTeacherRequest)(nil),        // 7: user_service.GetListSupportTeacherRequest
	(*GetReportListSupportTeacherRequest)(nil),  // 8: user_service.GetReportListSupportTeacherRequest
	(*GetListSupportTeacherResponse)(nil),       // 9: user_service.GetListSupportTeacherResponse
	(*GetReportListSupportTeacherResponse)(nil), // 10: user_service.GetReportListSupportTeacherResponse
}
var file_support_teacher_proto_depIdxs = []int32{
	5,  // 0: user_service.GetListSupportTeacherResponse.GetSupportTeachers:type_name -> user_service.GetSupportTeacherResponse
	6,  // 1: user_service.GetReportListSupportTeacherResponse.GetSupportTeachers:type_name -> user_service.GetReportSupportTeacherResponse
	2,  // 2: user_service.SupportTeacherService.Create:input_type -> user_service.CreateSupportTeacherRequest
	1,  // 3: user_service.SupportTeacherService.GetByID:input_type -> user_service.SupportTeacherID
	7,  // 4: user_service.SupportTeacherService.GetList:input_type -> user_service.GetListSupportTeacherRequest
	4,  // 5: user_service.SupportTeacherService.Update:input_type -> user_service.UpdateSupportTeacherRequest
	1,  // 6: user_service.SupportTeacherService.Delete:input_type -> user_service.SupportTeacherID
	8,  // 7: user_service.SupportTeacherService.GetReportList:input_type -> user_service.GetReportListSupportTeacherRequest
	3,  // 8: user_service.SupportTeacherService.Create:output_type -> user_service.SupportTeacherResponse
	5,  // 9: user_service.SupportTeacherService.GetByID:output_type -> user_service.GetSupportTeacherResponse
	9,  // 10: user_service.SupportTeacherService.GetList:output_type -> user_service.GetListSupportTeacherResponse
	5,  // 11: user_service.SupportTeacherService.Update:output_type -> user_service.GetSupportTeacherResponse
	0,  // 12: user_service.SupportTeacherService.Delete:output_type -> user_service.SupportTeacherEmpty
	10, // 13: user_service.SupportTeacherService.GetReportList:output_type -> user_service.GetReportListSupportTeacherResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_support_teacher_proto_init() }
func file_support_teacher_proto_init() {
	if File_support_teacher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_support_teacher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTeacherEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTeacherID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_teacher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_support_teacher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_support_teacher_proto_goTypes,
		DependencyIndexes: file_support_teacher_proto_depIdxs,
		MessageInfos:      file_support_teacher_proto_msgTypes,
	}.Build()
	File_support_teacher_proto = out.File
	file_support_teacher_proto_rawDesc = nil
	file_support_teacher_proto_goTypes = nil
	file_support_teacher_proto_depIdxs = nil
}
